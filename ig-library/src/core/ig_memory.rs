use std::str::FromStr;
use strum_macros::EnumIter;

#[repr(u16)]
#[derive(EnumIter, PartialEq, Eq, Hash)]
pub enum EMemoryPoolID {
    MP_INVALID = 0,
    MP_DEFAULT = 51,
    MP_RESERVE = 52,
    MP_PRECACHE_ERR = 53,
    MP_PERMANENT = 54,
    MP_TEMPORARY = 55,
    MP_SOUND = 56,
    MP_SOUND_SAMPLE = 57,
    MP_SOUND_SAMPLE_2 = 58,
    MP_SOUND_STREAM = 59,
    MP_VISUAL_CONTEXT = 60,
    MP_GRAPHICS = 61,
    MP_HERO_TEMPORARY_LOADING = 62,
    MP_VEHICLE_TEMPORARY = 63,
    MP_ZONE = 64,
    MP_ZONE_DYNAMIC = 65,
    MP_MENU = 66,
    MP_MENU_STREAMING = 67,
    MP_HAVOK = 68,
    MP_SOUND_PHYSICAL = 69,
    MP_IMAGE_OBJECTS = 70,
    MP_PEACHES = 71,
    MP_MEMORYMONITOR = 72,
    MP_MOVIE = 73,
    MP_MOVIE_BUFFERS = 74,
    MP_NETWORK = 75,
    MP_TOY_COMMUNICATION = 76,
    MP_DOTNET = 77,
    MP_DOTNET_GENERICS = 78,
    MP_WINDOWS_VRAM = 79,
    MP_PS3_MAIN_VRAM = 80,
    MP_DEBUG = 81,
    MP_MESSAGING = 82,
    MP_TEMPORARY_LOADING = 83,
    MP_MESSAGE_OF_THE_DAY = 84,
    MP_GAME_MODE_RESIZABLE = 85,
    MP_PORTAL = 86,
    MP_HERO_BEGIN = 87,
    MP_MAX_POOL = 256,
    MP_POOL_COUNT = 205,
}

/// We don't read into memory pools, we have rust and ourselves dealing with memory fine. We are not constrained or budgeting memory.
#[derive(Debug, Copy, Clone, Eq, PartialEq, Default)]
pub enum igMemoryPool {
    Bootstrap,
    System,
    Static,
    MetaData,
    String,
    Kernel,
    SystemDebug,
    Debug,
    #[default]
    Default,
    Current,
    Fast,
    AGP,
    VRAM,
    Auxiliary,
    VisualContext,
    Graphics,
    Actor,
    AnimationData,
    Geometry,
    Vertex,
    VertexEdge,
    VertexObject,
    Image,
    ImageObject,
    Attribute,
    Node,
    Audio,
    AudioDsp,
    AudioSample,
    AudioSampleSecondary,
    AudioStreamFile,
    AudioStreamDecode,
    Video,
    Temporary,
    DMA,
    Shader,
    ShaderBinary,
    RenderList,
    Texture,
    DriverData,
    Handles,
    List,
    Exporter,
    Optimizer,
    Network,
    VRAMTopDown,
    DotNet,
    VramA,
    VramB,
    VramStaging,
    Text // Tfb Specific?
}

impl FromStr for igMemoryPool {
    type Err = ();

    fn from_str(name: &str) -> Result<Self, Self::Err> {
        match name {
            "Bootstrap" => Ok(igMemoryPool::Bootstrap),
            "System" => Ok(igMemoryPool::System),
            "Static" => Ok(igMemoryPool::Static),
            "MetaData" => Ok(igMemoryPool::MetaData),
            "String" => Ok(igMemoryPool::String),
            "Kernel" => Ok(igMemoryPool::Kernel),
            "SystemDebug" => Ok(igMemoryPool::SystemDebug),
            "Debug" => Ok(igMemoryPool::Debug),
            "Default" => Ok(igMemoryPool::Default),
            "Current" => Ok(igMemoryPool::Current),
            "Fast" => Ok(igMemoryPool::Fast),
            "AGP" => Ok(igMemoryPool::AGP),
            "VRAM" => Ok(igMemoryPool::VRAM),
            "Auxiliary" => Ok(igMemoryPool::Auxiliary),
            "VisualContext" => Ok(igMemoryPool::VisualContext),
            "Graphics" => Ok(igMemoryPool::Graphics),
            "Actor" => Ok(igMemoryPool::Actor),
            "AnimationData" => Ok(igMemoryPool::AnimationData),
            "Geometry" => Ok(igMemoryPool::Geometry),
            "Vertex" => Ok(igMemoryPool::Vertex),
            "VertexEdge" => Ok(igMemoryPool::VertexEdge),
            "VertexObject" => Ok(igMemoryPool::VertexObject),
            "Image" => Ok(igMemoryPool::Image),
            "ImageObject" => Ok(igMemoryPool::ImageObject),
            "Attribute" => Ok(igMemoryPool::Attribute),
            "Node" => Ok(igMemoryPool::Node),
            "Audio" => Ok(igMemoryPool::Audio),
            "AudioDsp" => Ok(igMemoryPool::AudioDsp),
            "AudioSample" => Ok(igMemoryPool::AudioSample),
            "AudioSampleSecondary" => Ok(igMemoryPool::AudioSampleSecondary),
            "AudioStreamFile" => Ok(igMemoryPool::AudioStreamFile),
            "AudioStreamDecode" => Ok(igMemoryPool::AudioStreamDecode),
            "Video" => Ok(igMemoryPool::Video),
            "Temporary" => Ok(igMemoryPool::Temporary),
            "DMA" => Ok(igMemoryPool::DMA),
            "Shader" => Ok(igMemoryPool::Shader),
            "ShaderBinary" => Ok(igMemoryPool::ShaderBinary),
            "RenderList" => Ok(igMemoryPool::RenderList),
            "Texture" => Ok(igMemoryPool::Texture),
            "DriverData" => Ok(igMemoryPool::DriverData),
            "Handles" => Ok(igMemoryPool::Handles),
            "List" => Ok(igMemoryPool::List),
            "Exporter" => Ok(igMemoryPool::Exporter),
            "Optimizer" => Ok(igMemoryPool::Optimizer),
            "Network" => Ok(igMemoryPool::Network),
            "VRAMTopDown" => Ok(igMemoryPool::VRAMTopDown),
            "DotNet" => Ok(igMemoryPool::DotNet),
            "VramA" => Ok(igMemoryPool::VramA),
            "VramB" => Ok(igMemoryPool::VramB),
            "VramStaging" => Ok(igMemoryPool::VramStaging),
            "MEM1" => Ok(igMemoryPool::Default),
            "MEM2" => Ok(igMemoryPool::Default),
            "VRAMBottomUp" => Ok(igMemoryPool::Default),
            "Text" => Ok(igMemoryPool::Text),
            &_ => Err(()),
        }
    }
}
